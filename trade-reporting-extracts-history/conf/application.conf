# Copyright 2025 HM Revenue & Customs
#
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#     http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.

include "backend.conf"

# This is the main configuration file for the application.
# ~~~~~

appName = trade-reporting-extracts

# Default http client
play.modules.enabled += "uk.gov.hmrc.play.bootstrap.HttpClientV2Module"

# Play Modules
play.modules.enabled += "uk.gov.hmrc.tradereportingextracts.config.Module"
play.modules.enabled += "uk.gov.hmrc.internalauth.client.modules.InternalAuthModule"
play.modules.enabled += "uk.gov.hmrc.mongo.play.PlayMongoModule"

# The application languages
# ~~~~~
play.i18n.langs = ["en"]

# Router
# ~~~~~
# Define the Router object to use for this application.
# This router will be looked up first when the application is starting up,
# so make sure this is the entry point.
# Furthermore, it's assumed your route file is named properly.
# So for an application router like `my.application.Router`,
# you may need to define a router file `conf/my.application.routes`.
# Default to Routes in the root package (and conf/routes)
# !!!WARNING!!! DO NOT CHANGE THIS ROUTER
play.http.router = prod.Routes

# Controller
# ~~~~~
# By default all controllers will have authorisation, logging and
# auditing (transaction monitoring) enabled.
# The below controllers are the default exceptions to this rule.

# Microservice specific config

mongodb {
  uri = "mongodb://localhost:27017/trade-reporting-extracts"
  reportRequestTTLInDays = 30  # Days
  userTTLInDays = 365  # Days
}

etmp {
  auth-token = "EtmpAuthToken"
}
eis {
  auth-token = "EisAuthToken"
}

microservice {
  services {
    internal-auth {
        host = localhost
        port = 8470
    }

    auth {
      host = localhost
      port = 8500
    }
    
    customs-data-store {
      host = localhost
      port = 2101
      context = "/trade-reporting-extracts-stub"
      verified-email = "/eori/verified-email-third-party"
      company-information = "/eori/company-information-third-party"
      eori-history = "/eori/eori-history-third-party"
    }

    sdes {
      host = localhost
      port = 2101
      context = "/trade-reporting-extracts-stub/files-available/list/TRE"
      x-client-id = "TRE-CLIENT-ID"
    }

    email {
      host = localhost
      port = 8300
    }

    eis {
      host = localhost
      port = 2101
      auth-token = "EisAuthToken"
      request-trader-report{
        max-retries = 3
        retry-delay = 3
      }
      context = "/trade-reporting-extracts-stub/gbe/requesttraderreport/v1"
    }
  }
}

reportRequest {
  dailySubmissionLimit = 500
}

internal-auth {
  token = abc123
}

internal-auth-token-initializer {
  enabled = true
  delay = 5.seconds
}

crypto.key = "dWwnCziF6j2TEdaOvZHq3JVADkl5H+4G69AbDZhJiIA="

